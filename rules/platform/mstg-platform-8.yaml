rules:
  - id: MSTG-PLATFORM-8
    severity: WARNING
    languages:
      - java
    metadata:
      company: IMQ Minded Security
      author: Riccardo Cardelli (gand3lf)
      owasp-mobile: M2
      category: security
      area: platform
      verification-level:
        - L1
        - L2
      references:
        - https://github.com/OWASP/owasp-mastg/blob/master/Document/0x05h-Testing-Platform-Interaction.md#testing-object-persistence-mstg-platform-8
    message: Object deserialization could not be implemented using safe serialization APIs.
    pattern-either:
        # Jackson potential vulnerable versions
        - patterns:
          - pattern: VersionUtil.parseVersion("$VER", "$J", "...");
          - metavariable-regex:
              metavariable: $J
              regex: .*(jackson).*
        - patterns:
          - pattern: import org.codehaus.jackson;
        # JSONObject
        - patterns:
            - pattern: (JSONObject $OBJ).$M($P,...)
            - metavariable-regex:
                metavariable: $M
                regex: (get|put).*
            - metavariable-regex:
                metavariable: $P
                regex: .*(?i)(key|secret|password|pwd|passwd|token|salt|seed|salt|bearer|auth|otp|crypt(?-i)|IV).*
        # OrmLite
        - patterns:
            - pattern-either:
                - pattern: |
                    @DatabaseField(...)
                    $T $FLD
                - pattern: |
                    @DatabaseField(...)
                    $T $FLD = $X;
                - pattern: |
                    @DatabaseTable(tableName=$FLD)
            - metavariable-regex:
                metavariable: $FLD
                regex: .*(?i)(key|secret|password|pwd|passwd|token|salt|seed|salt|bearer|auth|otp|crypt(?-i)|IV).*
        # SugarORM
        - patterns:
            - pattern-inside: |
                class $C extends SugarRecord<$T>{
                ...
                }
            - pattern-not-inside: |
                $X(...){ ... }
            - pattern-either:
              - pattern: $A $VAR = ...;
              - pattern: $A $VAR;
            - metavariable-regex:
                metavariable: $VAR
                regex: .*(?i)(key|secret|password|pwd|passwd|token|salt|seed|salt|bearer|auth|otp|crypt(?-i)|IV).*
        # GreenDAO
        - patterns:
            - pattern-inside: |
                @Entity(...)
                class $C{
                ...
                }
            - pattern-not-inside: |
                $X(...){ ... }
            - pattern-either:
              - pattern: $A $VAR = ...;
              - pattern: $A $VAR;
            - metavariable-regex:
                metavariable: $VAR
                regex: .*(?i)(key|secret|password|pwd|passwd|token|salt|seed|salt|bearer|auth|otp|crypt(?-i)|IV).*
        # GreenDAO without getEncryptedWritableDb
        - patterns: 
            - pattern: |
                $H = new DaoMaster.DevOpenHelper(...);
                ...
                $H.getWritableDb(...);
        # ActiveAndroid
        - patterns:
            - pattern-inside: |
                @Table(name = "$T")
                class $C extends Model{
                ...
                }
            - pattern-not-inside: |
                @Table(name = "$T")
                class $C extends Model{
                $X(...){ ...
                (Cipher $S).doFinal(...);
                ... }
                }
            - pattern-not-inside: |
                $X(...){ ... }
            - pattern: |
                @Column(name = "$VAR")
            - metavariable-regex:
                metavariable: $VAR
                regex: .*(?i)(key|secret|password|pwd|passwd|token|salt|seed|salt|bearer|auth|otp|crypt(?-i)|IV).*
        # Realm
        - patterns:
            - pattern-inside: |
                class $C extends RealmObject{
                ...
                }
            - pattern-not-inside: |
                class $C extends RealmObject{
                $X(...){ ...
                (Cipher $S).doFinal(...);
                ... }
                }
            - pattern-not-inside: |
                $X(...){ ... }
            - pattern-either:
              - pattern: $A $VAR = ...;
              - pattern: $A $VAR;
            - metavariable-regex:
                metavariable: $VAR
                regex: .*(?i)(key|secret|password|pwd|passwd|token|salt|seed|salt|bearer|auth|otp|crypt(?-i)|IV).*
        # Parcelable
        - patterns:
            - pattern-inside: |
                class $C implements Parcelable{
                ...
                }
            - pattern-not-inside: |
                class $C implements Parcelable{
                $X(...){ ...
                (Cipher $S).doFinal(...);
                ... }
                }
            - pattern-not-inside: |
                $X(...){ ... }
            - pattern-either:
              - pattern: $A $VAR = ...;
              - pattern: $A $VAR;
            - metavariable-regex:
                metavariable: $VAR
                regex: .*(?i)(key|secret|password|pwd|passwd|token|salt|seed|salt|bearer|auth|otp|crypt(?-i)|IV).*
        # Serializable
        - patterns:
            - pattern-inside: |
                class $C implements Serializable{
                ...
                }
            - pattern-not-inside: |
                class $C implements Serializable{
                $X(...){ ...
                (Cipher $S).doFinal(...);
                ... }
                }
            - pattern-not-inside: |
                $X(...){ ... }
            - pattern-either:
              - pattern: $A $VAR = ...;
              - pattern: $A $VAR;
            - metavariable-regex:
                metavariable: $VAR
                regex: .*(?i)(key|secret|password|pwd|passwd|token|salt|seed|salt|bearer|auth|otp|crypt(?-i)|IV).*
